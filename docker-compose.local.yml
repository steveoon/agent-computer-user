version: "3.8"

services:
  app:
    # 本地开发专用 - 构建适合当前架构的镜像
    build:
      context: .
      dockerfile: Dockerfile
      # 不指定平台，让 Docker 自动选择当前架构
      # platforms 参数被移除
      args:
        # 构建时需要的 NEXT_PUBLIC_ 环境变量
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    image: ai-computer-use:local
    ports:
      - "3000:3000"
    # 添加 Chrome 运行所需的安全配置
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    # 添加主机网络别名，让容器能访问主机服务
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      # AI Provider Keys (至少需要一个)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}

      # E2B Desktop
      - E2B_API_KEY=${E2B_API_KEY}

      # Supabase (可选)
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}

      # Feishu Integration (可选)
      - FEISHU_BOT_WEBHOOK=${FEISHU_BOT_WEBHOOK}

      # WeChat Bot Integration (可选)
      - WECHAT_BOT_WEBHOOK=${WECHAT_BOT_WEBHOOK}

      # Duliday Integration
      - DULIDAY_TOKEN=${DULIDAY_TOKEN}

      # Puppeteer Configuration
      # Puppeteer MCP Server 会通过 npx 自动管理 Chromium
      # 如果需要连接到主机的 Chrome，设置此变量
      - PUPPETEER_REMOTE_DEBUGGING_ADDRESS=host.docker.internal:9222

      # Node Environment
      - NODE_ENV=development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
