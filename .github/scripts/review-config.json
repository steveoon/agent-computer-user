{
  "severity_threshold": "medium",
  "quality_threshold": 8,
  "blocked_patterns": [
    "console.log",
    "console.warn",
    "console.error",
    "debugger",
    "TODO:",
    "FIXME:",
    "HACK:",
    "@ts-ignore",
    "@ts-expect-error"
  ],
  "required_tests": true,
  "languages": {
    "typescript": {
      "rules": ["eslint", "typescript", "security"],
      "complexity_limit": 10,
      "strict_mode": true
    },
    "tsx": {
      "rules": ["eslint", "typescript", "react", "security"],
      "complexity_limit": 10,
      "strict_mode": true
    }
  },
  "excluded_files": [
    "*.min.js",
    "*.min.css",
    "vendor/*",
    "node_modules/*",
    "build/*",
    "dist/*",
    ".next/*",
    "coverage/*",
    "**/__tests__/**",
    "**/*.test.{ts,tsx}",
    "**/*.spec.{ts,tsx}",
    "vitest.config.*",
    "examples/**",
    "e2e/**"
  ],
  "review_checks": {
    "typescript": {
      "enabled": true,
      "checks": [
        "no_any_type",
        "strict_null_checks",
        "unused_variables",
        "type_safety",
        "zod_schema_validation"
      ]
    },
    "react": {
      "enabled": true,
      "checks": [
        "hooks_dependencies",
        "key_prop_usage",
        "memo_optimization",
        "component_naming",
        "prop_types"
      ]
    },
    "nextjs": {
      "enabled": true,
      "checks": [
        "app_router_conventions",
        "server_client_components",
        "metadata_export",
        "image_optimization",
        "font_optimization"
      ]
    },
    "security": {
      "enabled": true,
      "patterns": [
        "eval\\(",
        "innerHTML",
        "dangerouslySetInnerHTML",
        "process\\.env(?!\\.[A-Z_]+)",
        "require\\(.+\\$",
        "exec\\(",
        "spawn\\(",
        "api_key|apiKey|API_KEY",
        "password|secret|token",
        "supabase.*key",
        "anthropic.*key"
      ]
    },
    "performance": {
      "enabled": true,
      "max_file_size": 500,
      "max_function_length": 100,
      "max_complexity": 15,
      "checks": [
        "bundle_size",
        "lazy_loading",
        "memoization",
        "use_callback",
        "use_memo"
      ]
    },
    "quality": {
      "enabled": true,
      "min_comment_ratio": 0.05,
      "max_duplication": 0.15,
      "naming_conventions": {
        "components": "PascalCase",
        "hooks": "camelCase_with_use_prefix",
        "constants": "UPPER_SNAKE_CASE",
        "functions": "camelCase",
        "types": "PascalCase",
        "interfaces": "PascalCase_with_I_prefix"
      }
    },
    "ai_integration": {
      "enabled": true,
      "checks": [
        "tool_schema_validation",
        "stream_handling",
        "error_boundaries",
        "token_limits",
        "rate_limiting"
      ]
    },
    "testing": {
      "enabled": true,
      "min_coverage": 80,
      "required_test_types": [
        "unit",
        "integration",
        "component"
      ]
    }
  },
  "project_specific": {
    "zod_schemas": true,
    "strict_typescript": true,
    "ai_sdk_patterns": true,
    "supabase_integration": true,
    "mcp_tools": true,
    "e2b_desktop": true
  }
}